(provide 'blockify)
(require 'blockify)
(require 'php-util)

(defun ilia-cc-block()
  (interactive)
  (save-excursion
    (ilia-first-non-white)
    (let ((length 1))
      (if (= (point) (point-at-bol))
	  (setq length 2))
      (let ((delimeter (buffer-substring (point-at-bol) (+ length (point))))
	    (longest (ilia-line-length))
	    (current 0)
	    (start (point)))

	(while (ilia-scan-delimeter delimeter length "back")
	  (setq current (ilia-line-length))
	  (if (> current longest)
	      (setq longest current)))

	(push-mark)
	(goto-char start)

	(let ((lastpoint (point)))
	  (while (ilia-scan-delimeter delimeter length "forward")
	    (setq lastpoint (point))
	    (setq current (ilia-line-length))
	    (if (> current longest)
		(setq longest current)))
	  (goto-char lastpoint))

	(if (= length 2)
	    (setq longest (- longest 1)))
   
	(end-of-line)
	(insert "\n" delimeter)
	(dotimes (iteration longest)
	  (insert "-"))
   
	(goto-char (mark))
	(end-of-line)
	(insert "\n")
	(insert delimeter)
	(dotimes (iteration longest)
	  (insert "-"))))))

(defun ilia-fix-block()
  (interactive)
  (save-excursion
    (ilia-first-non-white)
    (let ((length 1))
      (if (= (point) (point-at-bol))
	  (setq length 2))
      (let ((delimeter (buffer-substring (point-at-bol) (+ length (point))))
	    (longest (ilia-line-length))
	    (current 0)
	    (start (point)))

	(while (ilia-scan-delimeter delimeter length "back")
	  (setq current (ilia-line-length))
	  (if (not (string-match "---" (buffer-substring (point-at-bol) (point-at-eol))))
	      (if (> current longest)
		  (setq longest current))))

	(push-mark)
	(goto-char start)

	(let ((lastpoint (point)))
	  (while (ilia-scan-delimeter delimeter length "forward")
	    (setq lastpoint (point))
	    (setq current (ilia-line-length))
	    (if (not (string-match "---" (buffer-substring (point-at-bol) (point-at-eol))))
		(if (> current longest)
		    (setq longest current))))
	  (goto-char lastpoint))

	(if (= length 2)
	    (setq longest (- longest 1)))

	(end-of-line)
	(insert "\n" delimeter)
	(dotimes (iteration longest)
	  (insert "-"))
	(beginning-of-line)
	(previous-line)
	(kill-line)
	(kill-line)
  
	(goto-char (mark))
	(end-of-line)
	(insert "\n")
	(insert delimeter)
	(dotimes (iteration longest)
	  (insert "-"))
	(beginning-of-line)
	(next-line)
	(kill-line)
	(kill-line)))))
